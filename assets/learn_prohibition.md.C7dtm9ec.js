import{_ as s}from"./chunks/Chaifen.vue_vue_type_script_setup_true_lang.z09GklCb.js";import{c as t,m as o,J as c,a as l,a4 as e,o as a}from"./chunks/framework.DTi27XpN.js";const d=e('<h1 id="宇浩拆分禁手" tabindex="-1">宇浩拆分禁手 <a class="header-anchor" href="#宇浩拆分禁手" aria-label="Permalink to &quot;宇浩拆分禁手&quot;">​</a></h1><p>拆分之「禁手」，指的是无论任何时候都不应当出现一些拆分情形。它高于一切拆分规则。一旦某一个拆分候选中出现了「禁手」，则直接淘汰。禁手包括：散件不分割、竖向不包夹、横间不穿心。</p><h2 id="散件不分割" tabindex="-1">散件不分割 <a class="header-anchor" href="#散件不分割" aria-label="Permalink to &quot;散件不分割&quot;">​</a></h2><p>有一部分字根，本身存在离散的部件，比如<code>戈</code>字右上的点、<code>犬</code>字的右上的点、<code>三</code>字的三个横等等。为了保证拆字的直观，保证检字（尤其是大字集下）的便捷性，我们需要对字根的连续性做出要求，并将它认定为字根的内在属性。</p><p>字根的连续性定义如下：</p><p>非连续写成、且被全包围结构或半包围结构分割的部件，不视为一个字根。</p>',6),r={class:"tip custom-block"},n=o("p",{class:"custom-block-title"},"例",-1),_=o("p",null,[o("code",null,"为"),l("字的两点不可以被视为字根"),o("code",null,"两点"),l("，因为它们非连续写成、且被半包围结构分割。")],-1),i={class:"flex justify-left flex-wrap"},p=o("p",null,[o("code",null,"卵"),l("字不拆"),o("code",null,"卯⺀"),l("而拆成"),o("code",null,"卯丶丶"),l("，因为"),o("code",null,"卯"),l("字的两点非连续写成、且被半包围结构分割。")],-1),h={class:"flex justify-left flex-wrap"},u=e('<h2 id="竖向不包夹" tabindex="-1">竖向不包夹 <a class="header-anchor" href="#竖向不包夹" aria-label="Permalink to &quot;竖向不包夹&quot;">​</a></h2><p>不少字根中存在若干分散的部件。</p><div class="tip custom-block"><p class="custom-block-title">例</p><p><code>二</code>和<code>三</code>中的横画是分离的。</p><p><code>合</code>分为了<code>人</code> <code>一</code> <code>口</code>三个部分。</p><p><code>儿</code>分为了<code>丿</code> <code>乚</code>两个部分。</p></div><p>这给了它们包夹其他字根的可能。如<code>亘</code>可看成<code>二</code>包夹<code>日</code>。</p><p>为了防止拆分不直观，我们做出规定，一个字根<strong>可以横向包夹，但不能纵向包夹</strong>。</p>',5),f={class:"tip custom-block"},x=o("p",{class:"custom-block-title"},"例",-1),m=o("p",null,[o("code",null,"卿"),l(" = "),o("code",null,"卯彐厶")],-1),b={class:"flex justify-left flex-wrap"},v=o("p",null,[o("code",null,"胤"),l(" = "),o("code",null,"儿幺月")],-1),k={class:"flex justify-left flex-wrap"},T=o("p",null,[o("code",null,"亘"),l(" = "),o("code",null,"一日一")],-1),j={class:"flex justify-left flex-wrap"},w=o("p",null,[o("code",null,"僵"),l(" = "),o("code",null,"亻一田一田一")],-1),y={class:"flex justify-left flex-wrap"},P=o("p",null,"这是因为，汉字的左右对称多于上下对称。左右包夹是可预测的，但上下包夹往往不可预测，必须要观察到最下方。",-1),S={class:"tip custom-block"},V=o("p",{class:"custom-block-title"},"如果设置了衣字根",-1),N=o("p",null,[l("某些输入法设置了"),o("code",null,"衣下"),l("字根，但"),o("code",null,"亠"),l("和"),o("code",null,"𧘇"),l("的出现并不总是成对的，必须看到最下方才能正确判断。")],-1),q={class:"flex justify-left flex-wrap"},A=o("h2",{id:"横间不穿心",tabindex:"-1"},[l("横间不穿心 "),o("a",{class:"header-anchor",href:"#横间不穿心","aria-label":'Permalink to "横间不穿心"'},"​")],-1),g=o("p",null,"为了使拆分更加直观，符合笔顺，防止字根交叉粘连，我们规定：",-1),C=o("p",null,[o("code",null,"工土士干千禾キ王壬龶丰末未生古矢缶早羊虫"),l("等字根不允许在"),o("code",null,"一一"),l("间穿插其他字根。")],-1),I=o("p",null,"这个规定在常用字中比较少用。",-1),B={class:"tip custom-block"},D=o("p",{class:"custom-block-title"},"例",-1),E=o("p",null,[o("code",null,"再"),l("不拆"),o("code",null,"王冂"),l("，而拆"),o("code",null,"一冂土")],-1),J={class:"flex justify-left flex-wrap"},O=o("p",null,[o("code",null,"垂"),l("不拆"),o("code",null,"壬龷"),l("，而拆"),o("code",null,"千龷一")],-1),R={class:"flex justify-left flex-wrap"},$=o("p",null,[o("code",null,"禹"),l("不拆"),o("code",null,"丿虫冂"),l("，而拆"),o("code",null,"丿口冂<丄丶>")],-1),z={class:"flex justify-left flex-wrap"},F=o("p",null,[o("code",null,"妻"),l("不拆 "),o("code",null,"キコ女"),l("或"),o("code",null,"龶乛女"),l("，而拆"),o("code",null,"十彐女"),l("。")],-1),G={class:"flex justify-left flex-wrap"},W=JSON.parse('{"title":"宇浩拆分禁手","description":"","frontmatter":{},"headers":[],"relativePath":"learn/prohibition.md","filePath":"learn/prohibition.md"}'),H={name:"learn/prohibition.md"},X=Object.assign(H,{setup(K){return(L,M)=>(a(),t("div",null,[d,o("div",r,[n,_,o("div",i,[c(s,{char:"为",parts:[1,2,1]}),l(" ✅ "),c(s,{char:"为",parts:[1,2,1],colors:[1,2,1]}),l(" ❌ ")]),p,o("div",h,[c(s,{char:"卵",parts:[2,1,1,2,1],colors:[1,2,1,1,3]}),l(" ✅ "),c(s,{char:"卵",parts:[2,1,1,2,1],colors:[1,2,1,1,2]}),l(" ❌ ")])]),u,o("div",f,[x,m,o("div",b,[c(s,{char:"卿",parts:[3,3,2,2],colors:[1,0,0,1]}),l(" ✅ "),c(s,{char:"卿",parts:[3,3,2,2],colors:[1,0,0,4]}),l(" ❌ ")]),v,o("div",k,[c(s,{char:"胤",parts:[1,3,4,1],colors:[1,0,0,1]}),l(" ✅ "),c(s,{char:"胤",parts:[1,3,4,1],colors:[1,0,0,4]}),l(" ❌ ")]),T,o("div",j,[c(s,{char:"亘",parts:[1,4,1],colors:[1,0,3]}),l(" ✅ "),c(s,{char:"亘",parts:[1,4,1],colors:[1,0,1]}),l(" ❌ ")]),w,o("div",y,[c(s,{char:"僵",parts:[2,1,5,1,5,1],colors:[0,2,0,4,0,6]}),l(" ✅ "),c(s,{char:"僵",parts:[2,1,5,1,5,1],colors:[0,2,0,2,0,2]}),l(" ❌ ")])]),P,o("div",S,[V,N,o("div",q,[c(s,{char:"襄",parts:[2,11,4],colors:[1,0,1]}),c(s,{char:"衮",parts:[2,4,4],colors:[1,0,1]}),c(s,{char:"兖",parts:[2,4,2],colors:[1,0,2]})])]),A,g,C,I,o("div",B,[D,E,o("div",J,[c(s,{char:"再",parts:[1,2,3]}),l(" ✅ "),c(s,{char:"再",parts:[1,2,3],colors:[1,0,1]}),l(" ❌ ")]),O,o("div",R,[c(s,{char:"垂",parts:[3,4,1],colors:[1,2,3]}),l(" ✅ "),c(s,{char:"垂",parts:[3,4,1],colors:[1,0,1]}),l(" ❌ ")]),$,o("div",z,[c(s,{char:"禹",parts:[1,3,2,3],colors:[1,2,3,4]}),l(" ✅ "),c(s,{char:"禹",parts:[1,3,2,3],colors:[0,1,0,1]}),l(" ❌ ")]),F,o("div",G,[c(s,{char:"妻",parts:[1,3,1,3],colors:[1,2,1,3]}),l(" ✅ "),c(s,{char:"妻",parts:[1,1,1,1,1,3],colors:[1,0,1,0,1,3]}),l(" ❌ "),c(s,{char:"妻",parts:[1,1,3,3],colors:[1,0,1,3]}),l(" ❌ ")])])]))}});export{W as __pageData,X as default};
