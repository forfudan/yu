import{_ as t,c as e,o as l,a4 as d}from"./chunks/framework.vM2YJXtg.js";const h=JSON.parse('{"title":"吉旦餅","description":"","frontmatter":{},"headers":[],"relativePath":"zht/docs/wafel.md","filePath":"zht/docs/wafel.md"}'),a={name:"zht/docs/wafel.md"},s=d('<h1 id="吉旦餅" tabindex="-1">吉旦餅 <a class="header-anchor" href="#吉旦餅" aria-label="Permalink to &quot;吉旦餅&quot;">​</a></h1><p><a href="https://lost-melody.github.io/wafel" target="_blank" rel="noreferrer"><strong>吉旦餅</strong></a>，是阿吉、王牌餅乾發起的一項衍生方案。它採用亂序字根設計、三碼定長、延遲頂字。「吉旦餅」這個名字，來自三名主要開發人：阿吉，forFudan，王牌餅乾。取義於 華夫餅 (wafel)，其漢語翻譯應有「雞蛋餅」之義。</p><p>輸入三碼後，對應的三碼單字不會上屏，而是將此漢字暫留在預選區，等到第七碼的時候，才頂出第一字。每輸入四碼時，進入臨時四碼模式，可以選擇 Tab 上屏對應的四碼單字。因此可看作加強版的「五三頂」輸入法。</p><p>雞蛋餅不取第三字根，故而拆分起來更加簡單，思維壓力較小。三碼一字，也使得輸入的節奏非常舒服。</p><table><thead><tr><th style="text-align:left;">特點</th><th style="text-align:left;">宇浩·星陳</th><th style="text-align:left;">吉旦餅</th></tr></thead><tbody><tr><td style="text-align:left;">使用最新版本宇浩拆分</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">支持到 CJK ext-I</td><td style="text-align:left;">✅</td><td style="text-align:left;">（四碼模式下）</td></tr><tr><td style="text-align:left;">兼容臺灣字形拆分</td><td style="text-align:left;">✅</td><td style="text-align:left;">❌</td></tr><tr><td style="text-align:left;">字根雙編碼</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">三碼方案</td><td style="text-align:left;">❌</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">四碼方案</td><td style="text-align:left;">✅</td><td style="text-align:left;">（支持四碼加 Tab 鍵輸入）</td></tr><tr><td style="text-align:left;">單字派碼長</td><td style="text-align:left;">~3.15</td><td style="text-align:left;">~2.65</td></tr><tr><td style="text-align:left;">一簡二簡個數</td><td style="text-align:left;">~600</td><td style="text-align:left;">~50</td></tr><tr><td style="text-align:left;">繁簡通打低極選重率 (0.2%)</td><td style="text-align:left;">✅</td><td style="text-align:left;">（四碼模式下）</td></tr><tr><td style="text-align:left;">大碼使用 Z 鍵</td><td style="text-align:left;">❌</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">小碼使用 Z 鍵</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">相似字形字根同大碼聚類</td><td style="text-align:left;">✅</td><td style="text-align:left;">❌</td></tr><tr><td style="text-align:left;">小碼使用拼音中的字母</td><td style="text-align:left;">✅</td><td style="text-align:left;">(頻率前50字根亂序，其他音托)</td></tr><tr><td style="text-align:left;">小碼 85% 使用拼音首字母</td><td style="text-align:left;">✅</td><td style="text-align:left;">❌</td></tr><tr><td style="text-align:left;">雙手互擊率 60%</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">嚴格優化鍵位分佈</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">Z 鍵反查</td><td style="text-align:left;">✅</td><td style="text-align:left;">❌</td></tr></tbody></table>',5),n=[s];function i(f,r,g,x,y,o){return l(),e("div",null,n)}const c=t(a,[["render",i]]);export{h as __pageData,c as default};
