import{_ as a}from"./chunks/Chaifen.vue_vue_type_script_setup_true_lang.BDf2CM-K.js";import{c,o as p,a2 as t,m as l,H as d,a as o}from"./chunks/framework.2ez64Ajs.js";import"./chunks/share.CJwP5FNe.js";const i={class:"tip custom-block"},s={class:"flex justify-left flex-wrap"},b=JSON.parse('{"title":"星陳輸入法單字編碼","description":"","frontmatter":{},"headers":[],"relativePath":"zht/learn/chars.md","filePath":"zht/learn/chars.md"}'),r={name:"zht/learn/chars.md"},k=Object.assign(r,{setup(n){return(u,e)=>(p(),c("div",null,[e[6]||(e[6]=t('<h1 id="星陳輸入法單字編碼" tabindex="-1">星陳輸入法單字編碼 <a class="header-anchor" href="#星陳輸入法單字編碼" aria-label="Permalink to &quot;星陳輸入法單字編碼&quot;">​</a></h1><h2 id="編碼規則" tabindex="-1">編碼規則 <a class="header-anchor" href="#編碼規則" aria-label="Permalink to &quot;編碼規則&quot;">​</a></h2><p>學習了宇浩系列輸入法的拆分規則後，我們可以將任何一個漢字拆成唯一的字根組合。</p><p>現在，我們討論如何把字根組合轉爲星陳輸入法的單字編碼。</p><p>星陳輸入法的單字編碼一般是由<strong>4 個字母</strong>構成。部分字根字爲 3 個字母。</p><p>在星陳輸入法中，無論一個字能拆成幾個字根，我們只關心其中的四個根，分別是：</p><ul><li>第一根：首根</li><li>第二根：二根</li><li>第三根：三根</li><li>倒數第一根：末根</li></ul><p>這同五筆字型相同，和鄭碼、徐碼不同。</p><p>單字編碼規則如下：</p><ol><li>依次取一、二、三、末根大碼。</li><li>不足四碼時，補上末根小碼。</li><li>仍然不足四碼時，補上首根小碼。</li></ol><p>最後一條，只有雙根字中會出現。第二條，只有三根字中會出現。</p>',11)),l("div",i,[e[0]||(e[0]=t('<p class="custom-block-title">例</p><p><code>嫩</code>字拆成<code>女木口夂</code>，分別對應了首根、二根、三根、末根，我們直接取〔<code>女</code> Cn <code>木</code> Am <code>口</code> Lv <code>夂</code> Tu〕四個字根的大碼 CALT 即可出字。</p>',2)),d(a,{char:"嫩",parts:[3,1,3,3,4],colors:[1,2,3,2,4]}),e[1]||(e[1]=l("p",null,[l("code",null,"整"),o("字拆成"),l("code",null,"木口夂正"),o("，我們只取首根、二根、三根、末根，也就是〔"),l("code",null,"木"),o(" Am "),l("code",null,"口"),o(" Lv "),l("code",null,"攵"),o(" Tu "),l("code",null,"正"),o(" Lz〕的大碼，輸入 ALTP 即可出字。")],-1)),d(a,{char:"整",parts:[1,3,3,4,5],colors:[1,2,1,3,4]}),e[2]||(e[2]=l("p",null,[l("code",null,"算"),o("字拆成"),l("code",null,"竹目卄"),o("，只有三根，所以我們取全部根，也就是〔"),l("code",null,"𥫗"),o(" Gz "),l("code",null,"目"),o(" Jm "),l("code",null,"廾"),o(" So〕的大碼，即 GJS。此時，注意到不足四碼，故而補上最末根的小碼 o。輸入 GJso 即可出字。")],-1)),d(a,{char:"算",parts:[6,5,3]}),e[3]||(e[3]=l("p",null,[l("code",null,"织"),o("字拆成"),l("code",null,"纟口八"),o("，只有三根，所以我們取全部根大碼，也就是 KLK。此時，注意到不足四碼，故而補上最末根的小碼 a。輸入 KLKa 即可出字。")],-1)),d(a,{char:"织",parts:[3,3,2]}),e[4]||(e[4]=l("p",null,[l("code",null,"认"),o("字拆成"),l("code",null,"讠人"),o("，只有兩根，所以我們取全部根，也就是〔"),l("code",null,"讠"),o(" Dy "),l("code",null,"人"),o(" Re〕的大碼，即 DR 。此時，注意到不足四碼，故而補上最末根的小碼 e。注意到仍然不足四碼，於是再添上首根的小碼 y。輸入 DRey 即可出字。")],-1)),d(a,{char:"认",parts:[2,2]}),e[5]||(e[5]=l("p",null,[l("code",null,"好"),o("字拆成"),l("code",null,"女子"),o("，只有兩根，所以我們取全部根，也就是〔"),l("code",null,"女"),o(" Cn "),l("code",null,"子"),o(" Kz〕的大碼，即 CK。此時，注意到不足四碼，故而補上最末根的小碼 z。注意到仍然不足四碼，於是再添上首根的小碼 n。輸入 CKzn 即可出字。")],-1)),d(a,{char:"好",parts:[3,3]})]),e[7]||(e[7]=t('<p>末尾添加首根的小碼，只是爲了補齊四碼的作用，只有在雙根字中才會出現。</p><h2 id="成字字根" tabindex="-1">成字字根 <a class="header-anchor" href="#成字字根" aria-label="Permalink to &quot;成字字根&quot;">​</a></h2><p>有些字根本身就是常用字，稱爲「成字字根」，又稱爲「單根字」。</p><p>單根字的全碼爲三碼：大碼+小碼+小碼</p><div class="tip custom-block"><p class="custom-block-title">例</p><p><code>木</code>作爲單字時，編碼爲 <code>Amm</code>。</p><p><code>骨</code>作爲單字時，編碼爲 <code>Rgg</code>。</p></div><p>注意到，字根字編碼規則同單字編碼規則是一致的。</p><ul><li>假設字根大碼爲 A，小碼爲 a。</li><li>首先，依次取一、二、三、末根大碼，故取 A。</li><li>接着，不足四碼，故補上末根小碼，故取 a。</li><li>最後，仍然不足四碼，故補上首根小碼 a。最終編碼爲 Aaa。</li></ul><div class="info custom-block"><p class="custom-block-title">常見問題</p><p>Q：字根字重複小碼的原因是什麽？</p><p>A：首先是爲了讓字根編碼規則和單字編碼規則一致。其次，如果字根字是兩碼，但字根本身比較罕用，那麽會浪費一個寶貴的二級簡碼碼位。</p><p>很多輸入法會將另一個常用字設置成二簡，而讓字根字選重，或者通過其他方式爲字根字增加一碼。這個方式實際上卻在事實上形成了新的重碼。星陳輸入法直接在根源上解決了這個問題。</p></div><h2 id="空格鍵的使用" tabindex="-1">空格鍵的使用 <a class="header-anchor" href="#空格鍵的使用" aria-label="Permalink to &quot;空格鍵的使用&quot;">​</a></h2><p>在很多輸入法軟件中，空格鍵（以下用<code>_</code>表示）用來上屏首選字。</p><p>根據以上的學習內容，我們發現：星陳輸入法的編碼最長不超過 4 個字母。由於這個特性，我們在輸入完編碼後，不一定需要按空格鍵將字打上屏幕。</p><p>空格鍵只在以下情況需要使用：</p><ol><li>一個字的編碼低於 4 位，需要按空格鍵上屏首選。比如「人」字，需要按<code>Re_</code>上屏。</li><li>一個字的編碼等於 4 位，且後面沒有其他的字需要輸入，則需要按空格鍵上屏首選。</li></ol><p>以下情況，不需要使用空格鍵：</p><p>一個字的編碼等於 4 位，且有後續字符等待輸入。我們不需要按空格鍵。只要直接輸入下一個字的首碼，這個字就會自動上屏。我們稱之爲「五碼頂屏」。例如：我們打「霽雨」二字，「霽」字的編碼是<code>〔雨文{介下}・ CTKa〕</code>。輸入<code>a</code>後，我們直接輸入「雨」字的編碼<code>〔雨・ Cvv〕</code>，則「霽」字會自動上屏。</p>',15)),l("div",s,[d(a,{char:"霁",parts:[8,4,2]}),d(a,{char:"雨",parts:[8]})])]))}});export{b as __pageData,k as default};
