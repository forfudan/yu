import{_ as a,c as r,o as e,a2 as o}from"./chunks/framework.2ez64Ajs.js";const u=JSON.parse('{"title":"背景故事","description":"","frontmatter":{},"headers":[],"relativePath":"docs/background.md","filePath":"docs/background.md"}'),n={name:"docs/background.md"};function s(p,t,c,d,i,l){return e(),r("div",null,[...t[0]||(t[0]=[o('<h1 id="背景故事" tabindex="-1">背景故事 <a class="header-anchor" href="#背景故事" aria-label="Permalink to &quot;背景故事&quot;">​</a></h1><p>制作宇浩输入法，有几个契机：一个是十年前我写下<a href="https://zhuanlan.zhihu.com/p/615631608" target="_blank" rel="noreferrer">《上海话简明教程》</a>的时候，遇到了一个情况：有时候我脑海里想的是方言，但用拼音输入的时候，往往会卡壳或者错误。当时的我意识到<strong>字形输入法</strong>的重要性，于是部分使用了仓颉和五笔字形。</p><p>另一个契机是两年前，我开始写一本古典章回体小说，里面有大量的半文半白的句子，以及古典诗词。使用拼音和双拼，需要不断翻页找字，影响思维的连贯性。这更坚定了我完全使用形码进行创作的决心。</p><p>第三个契机是我在日常生活中，会大量使用简化字和繁体字：使用简化字同身边人交流，同时使用繁体字进行文学创作。因为我用笔写字的时候也使用陆标繁体，我并不需要输入法为我进行简繁转换。同时，简繁转换一对多的特点、不同标准下的字形有差异，导致转换往往会发生错误。我希望有这样一种输入法，能够分离繁简汉字，如同写字一样，想打繁体打繁体，想打简体打简体。</p><p>三个契机，也道出了我的三个需求：一、我需要一个不依赖于读音的输入法，也就是字形输入法。二、这个输入法的重码率要低，让我不用选字，流畅地输入。三、这个输入法能够做到繁简汉字分离，一字一码，不存在繁简共码现象。</p><p>市面上的输入法，满足上述三个条件的，在当时只有「仓颉」和「徐码」。因为仓颉是五码定长，没有简码和词语输入，所以效率不是很高。所以，我最终选择使用徐码，一年中，我定制了自己的 Rime 方案，还进行了全汉字的拆分。</p><p>使用繁体字写了一百万字的古典章回体小说后，我深感具备繁简通打能力的字形输入法妙不可言。当前市面上允许<strong>繁简通打</strong>的<strong>四码定长</strong>的字形输入法只有徐码，但它需要判断主副根，且回头码有时占据第四码，对于复杂汉字的拆分不是特别顺畅。基于这个原因，我决定暂时放下小说创作，使用 Python 制作一款在繁体、简体、繁简混合，这三种文本模式下都能进行盲打的方案。</p><p>特别的，我希望它能够做到规则简明、常用繁简字闭眼盲打、大字集检字方便。经过了一系列调试和改进，在同好们的支持和鼓励下，这款输入法终于大功告成。在此，需要感谢所有帮助过我，给我提过宝贵意见和建议的诸位同好。感谢五笔字型和郑码这两个形码界的里程碑，它们的很多理念被沿用。感谢徐码，它是第一个将繁简通打引入四码定长的方案，它的繁简混合低重奠定了宇浩输入法的高起点。</p>',8)])])}const g=a(n,[["render",s]]);export{u as __pageData,g as default};
