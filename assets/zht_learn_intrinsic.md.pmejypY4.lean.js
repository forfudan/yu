import{_ as l}from"./chunks/Chaifen.vue_vue_type_script_setup_true_lang.BDf2CM-K.js";import{c as t,o as r,m as e,a2 as s,a as d,H as c}from"./chunks/framework.2ez64Ajs.js";import"./chunks/share.CJwP5FNe.js";const i={class:"tip custom-block"},a={class:"flex justify-left flex-wrap"},p={class:"tip custom-block"},n={class:"flex justify-left flex-wrap"},u={class:"flex justify-left flex-wrap"},f={class:"info custom-block"},m={class:"flex justify-left flex-wrap"},x={class:"flex justify-left flex-wrap"},b={class:"flex justify-left flex-wrap"},k={class:"flex justify-left flex-wrap"},v={class:"tip custom-block"},h={class:"flex justify-left flex-wrap"},w={class:"flex justify-left flex-wrap"},V=JSON.parse('{"title":"字根的内在屬性","description":"","frontmatter":{},"headers":[],"relativePath":"zht/learn/intrinsic.md","filePath":"zht/learn/intrinsic.md"}'),j={name:"zht/learn/intrinsic.md"},z=Object.assign(j,{setup(y){return(P,o)=>(r(),t("div",null,[o[19]||(o[19]=e("h1",{id:"字根的内在屬性",tabindex:"-1"},[d("字根的内在屬性 "),e("a",{class:"header-anchor",href:"#字根的内在屬性","aria-label":'Permalink to "字根的内在屬性"'},"​")],-1)),o[20]||(o[20]=e("p",null,[d("上面我們提到了宇浩拆分規則的優先級。其實，在「字根最少」之上，還有一個隱藏的原則，也就是："),e("strong",null,"字根的内在屬性"),d("。")],-1)),o[21]||(o[21]=e("p",null,"何爲字根的内在屬性？其實就是指某一個字根區別於另一個字根的内在特點。",-1)),e("div",i,[o[0]||(o[0]=s('<p class="custom-block-title">例</p><p><code>吉</code>拆成<code>士口</code>而不是<code>土口</code>，<code>周</code>拆成<code>⺆土口</code>而不是<code>⺆士口</code>，這是因爲<code>土</code>的下面一筆更長，而<code>士</code>的下面一筆更短。這是區別兩個字根的本質原因和内在屬性。</p>',2)),e("div",a,[c(l,{char:"吉",parts:[3,3]}),c(l,{char:"周",parts:[2,3,3]})])]),o[22]||(o[22]=e("p",null,"「内在屬性」可以解釋爲什麽有些字這樣拆而不是那樣拆，有些字爲什麽看上去違反了「字根最少」的原則。",-1)),e("div",p,[o[3]||(o[3]=s('<p class="custom-block-title">例</p><p><code>敝</code>拆爲<code>丷巾八攵</code>而非<code>氺巾攵</code>，這看似違反了「字根最少」原則，但其實沒有。注意到，<code>敝</code>字左下的筆畫是撇不是提；在<code>氺</code>中，左下角的筆畫是提不是撇。故而，<code>敝</code>字裡並不存在<code>氺</code>字根。正因爲如此，我們取四根<code>丷巾八攵</code>而非三根<code>氺巾攵</code>。</p>',2)),e("div",n,[c(l,{char:"敝",parts:[2,3,2,4]}),o[1]||(o[1]=d(" ✅ ",-1)),c(l,{char:"敝",parts:[2,2,3,4],colors:[1,2,1,3]}),o[2]||(o[2]=d(" ❌ ",-1))])]),o[23]||(o[23]=s('<p>在這個章節，我們就詳細討論字根的内在屬性，討論某些字根在宇浩拆分中被分離或者被合併的原因，從而讓某些字的拆分原因更加明確。</p><h2 id="日曰之辨" tabindex="-1">日曰之辨 <a class="header-anchor" href="#日曰之辨" aria-label="Permalink to &quot;日曰之辨&quot;">​</a></h2><p>不少輸入法對與<code>日</code> <code>曰</code>兩字的區分，比較複雜。大概有兩種情況：</p><ul><li>有些是基於形狀的，凡是長大於高的都爲<code>曰</code>，凡是長短於高的都爲<code>日</code>。但這個方法會跟隨着字體的不同而不同，有時候不合字源，也不統一。例如：<code>書</code>字源於<code>聿者</code>，<code>曹</code>古字爲<code>东东口</code>。</li><li>另外一種區分方法是基於字源。也就是説：凡是在古文中作<code>口</code>形，之後隸變爲<code>曰</code>形或<code>甘</code>形的字，都作<code>曰</code>。但這個方法對方一般的使用者難度太大，且分析字源會有疏漏之處，不應用於輸入法。</li></ul><p>我們必須注意到，在漢字中，存在<code>日曰</code>對立的字形，只有三組，分別爲：<code>日曰</code>、<code>汨汩</code>、<code>曶㫚</code>。在其他的情況下，不存在對立，也就不存在混淆問題。</p><p>因此，我基於<strong>實用主義</strong>原則，對這兩個字根不多加以區分，而採取更簡單的方法。即：除了上述三組對立情況外，全部取<code>日</code>根。換句話説，<code>曰</code>根只需要在對立情況下才會使用，即：<code>曰</code> <code>汩</code> <code>㫚</code>三個字。</p><p>這樣一來，可以顯著降低使用者的記憶和學習負擔。</p><h2 id="勹之辨" tabindex="-1">勹之辨 <a class="header-anchor" href="#勹之辨" aria-label="Permalink to &quot;勹之辨&quot;">​</a></h2><p><code>旬</code>的外框<code>勹</code>，同<code>敖</code>左下的<code>勹</code>都是撇加橫折鉤。宇浩輸入法不做區分。</p><h2 id="點之辨" tabindex="-1">點之辨 <a class="header-anchor" href="#點之辨" aria-label="Permalink to &quot;點之辨&quot;">​</a></h2><p>這裡對含點字根的識別和歸併作出解釋。</p><div class="info custom-block"><p class="custom-block-title">含點字根</p><ul><li>單點<code>丶</code>和捺<code>乀</code>視爲同一個字根。</li><li>相重疊的兩點，即<code>头</code> <code>冬</code>中的部分，和<code>二</code>同碼位。</li><li>左對點<code>冫</code>和右對點<code>飞右</code>，和<code>二</code>同碼位。</li><li>下對點<code>八</code>爲一個字根。</li><li>上對點<code>丷</code> <code>䒑</code> <code>リ</code>同大碼。</li><li>左<code>⺦</code>爲一個字根。</li><li>左三點<code>氵</code>都在一個大碼。</li><li>上三點<code>ッ𠁼</code>都在一個大碼。</li><li>所有四點<code>灬</code>都在一個大碼。</li></ul></div><p><code>为</code> <code>卵</code>等字的兩點和<code>冬</code>下的兩點不同，非連續筆畫，且被半包圍或全包圍分割，故而不認定爲「兩點」。詳<a href="#散件不分割">「散件不分隔」禁手</a>。</p>',13)),e("div",u,[c(l,{char:"冬",parts:[3,2],colors:[0,1]}),o[4]||(o[4]=d(" ✅ ",-1)),c(l,{char:"为",parts:[1,2,1],colors:[1,0,1]}),o[5]||(o[5]=d(" ❌ ",-1)),c(l,{char:"卵",parts:[2,1,1,2,1],colors:[0,1,0,0,1]}),o[6]||(o[6]=d(" ❌ ",-1))]),o[24]||(o[24]=e("h2",{id:"人八入之辨",tabindex:"-1"},[d("人八入之辨 "),e("a",{class:"header-anchor",href:"#人八入之辨","aria-label":'Permalink to "人八入之辨"'},"​")],-1)),o[25]||(o[25]=e("p",null,[e("code",null,"人"),d(),e("code",null,"八"),d(),e("code",null,"入"),d("三字易混，這裡做出區分。")],-1)),e("div",f,[o[11]||(o[11]=e("p",{class:"custom-block-title"},"左撇右捺",-1)),e("ol",null,[e("li",null,[o[7]||(o[7]=e("p",null,[d("凡左撇不低於右捺，視作"),e("code",null,"人"),d("根。")],-1)),e("div",m,[c(l,{char:"令",parts:[2,1,3],colors:[1,0,0]}),c(l,{char:"内",parts:[2,2],colors:[0,1]}),c(l,{char:"两",parts:[1,2,2,2],colors:[0,0,1,2]})])]),e("li",null,[o[8]||(o[8]=e("p",null,[d("凡左撇低於右捺，視作"),e("code",null,"入"),d("根。")],-1)),e("div",x,[c(l,{char:"籴",parts:[2,6],colors:[1,0]}),c(l,{char:"陝",parts:[2,1,2,2,2],colors:[0,0,0,1,2]}),c(l,{char:"兩",parts:[1,3,2,2],colors:[0,0,1,2]})])]),e("li",null,[o[9]||(o[9]=e("p",null,[d("凡左撇右捺分離，視作"),e("code",null,"八"),d("根。")],-1)),e("div",b,[c(l,{char:"分",parts:[2,2],colors:[1,0]}),c(l,{char:"兴",parts:[4,2],colors:[0,1]}),c(l,{char:"典",parts:[6,2],colors:[0,1]})])]),e("li",null,[o[10]||(o[10]=e("p",null,[d("凡左撇右捺的中間被其他筆畫隔開，視作"),e("code",null,"<丿乀>"),d("根。宇碼中，它和"),e("code",null,"八"),d("同大小碼。")],-1)),e("div",k,[c(l,{char:"办",parts:[2,2],colors:[0,1]}),c(l,{char:"朱",parts:[4,2],colors:[0,1]}),c(l,{char:"兼",parts:[8,2],colors:[0,1]})])])])]),o[26]||(o[26]=s('<h2 id="口中無整畫" tabindex="-1">口中無整畫 <a class="header-anchor" href="#口中無整畫" aria-label="Permalink to &quot;口中無整畫&quot;">​</a></h2><p>口（音<code>kǒu</code>），囗（音<code>wéi</code>）。這兩個根如何區分？</p><p>答案是，如果方框裡有<strong>完整</strong>的筆畫，用<code>囗</code> <code>wéi</code>。否則一律用<code>口</code> <code>kǒu</code>。</p><div class="tip custom-block"><p class="custom-block-title">例</p><p><code>国</code>字中，有完整的筆畫，故而必須用<code>囗</code> <code>wéi</code>。 <code>中</code>字中，雖然<code>⼁</code>穿<code>口</code>而過，但並未被完全包含在<code>口</code>中。由於<code>口</code>中沒有完整的筆畫，故而用<code>口</code> <code>kǒu</code>。</p></div><p>此規定也適用於另外幾個包含<code>口</code>的字根。</p>',5)),e("div",v,[o[18]||(o[18]=e("p",{class:"custom-block-title"},"例",-1)),e("ul",null,[e("li",null,[o[14]||(o[14]=s("<code>古</code>下的<code>口</code>中如果包含完整的筆畫，應該拆如<code>十囗</code>。例如：<code>鄙</code>左下方的<code>口</code>中有<code>口</code>，故而應該拆成<code>口十囗口阝</code>。 ",14)),e("div",h,[c(l,{char:"鄙",parts:[3,2,2,3,1,2],colors:[1,2,3,4,3,5]}),o[12]||(o[12]=d(" ✅ ",-1)),c(l,{char:"鄙",parts:[3,4,3,1,2],colors:[1,2,3,2,4]}),o[13]||(o[13]=d(" ❌ ",-1))])]),e("li",null,[o[17]||(o[17]=s('<code>合</code>下的<code>口</code>中如果包含完整的筆畫，應該拆如<code>人一囗</code>。例如：<code>會</code>中間的<code>口</code>中有<code>小</code>，故而應該拆成<span class="yuniversus">人一日</span>。 ',14)),e("div",w,[c(l,{char:"會",parts:[2,1,6,4],colors:[1,2,3,4]}),o[15]||(o[15]=d(" ✅ ",-1)),c(l,{char:"會",parts:[5,3,1,4],colors:[1,2,1,3]}),o[16]||(o[16]=d(" ❌ ",-1))])])])]),o[27]||(o[27]=e("h2",{id:"弱根不分寫",tabindex:"-1"},[d("弱根不分寫 "),e("a",{class:"header-anchor",href:"#弱根不分寫","aria-label":'Permalink to "弱根不分寫"'},"​")],-1)),o[28]||(o[28]=e("p",null,"部分字根，姑且稱之弱根，不能分成兩次書寫，必須一次書寫完成。主要是爲了防止不直觀。比如「夔」字中的「一自八」不作「頁」字根拆，因爲它被「止㔾」穿插。這部分字根比較少，主要是一些出現散件的字根。這同「散件不分割」禁手類似。",-1))]))}});export{V as __pageData,z as default};
