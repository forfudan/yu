import{_ as d}from"./chunks/Chaifen.vue_vue_type_script_setup_true_lang.Dj4ye5qr.js";import{c as i,o as l,a2 as e,m as t,H as c}from"./chunks/framework.D5VGNaZP.js";import"./chunks/index.esm.DcL13wi7.js";const s={class:"tip custom-block"},g=JSON.parse('{"title":"日月輸入法單字編碼","description":"","frontmatter":{},"headers":[],"relativePath":"zht/learn/chars_ming.md","filePath":"zht/learn/chars_ming.md"}'),a={name:"zht/learn/chars_ming.md"},h=Object.assign(a,{setup(r){return(p,o)=>(l(),i("div",null,[o[7]||(o[7]=e('<h1 id="日月輸入法單字編碼" tabindex="-1">日月輸入法單字編碼 <a class="header-anchor" href="#日月輸入法單字編碼" aria-label="Permalink to &quot;日月輸入法單字編碼&quot;">​</a></h1><p>學習了宇浩系列輸入法的拆分規則後，我們可以將任何一個漢字拆成唯一的字根組合。現在，我們討論如何把字根組合轉爲單字編碼。</p><h2 id="取最多四根" tabindex="-1">取最多四根 <a class="header-anchor" href="#取最多四根" aria-label="Permalink to &quot;取最多四根&quot;">​</a></h2><p>在日月輸入法中，無論一個字能拆成幾個字根，我們只關心其中的<strong>四個根</strong>，分別是：</p><ul><li>第一根：首根</li><li>第二根：二根</li><li>第三根：三根</li><li>倒數第一根：末根</li></ul><p>這同五筆字型相同，和鄭碼、徐碼不同。如果一個字不滿四根，則按首、末、二、三的優先級稱呼它們，比如：</p><ul><li><code>木</code> 可以拆爲<code>木</code>一個字根，故而<code>木</code>是<strong>單根字</strong>，又稱<strong>字根字</strong>。</li><li><code>根</code> 可以拆爲<code>木艮</code>兩個字根，故而<code>木</code>是首根、<code>艮</code>是末根。它没有二、三根。</li><li><code>想</code> 可以拆爲<code>木目心</code>三個字根，故而<code>木</code>是首根、<code>目</code>是二根、<code>心</code>是末根。它没有三根。</li><li><code>整</code> 可以拆爲<code>木口夂正</code>四個字根，故而<code>木</code>是首根、<code>口</code>是次根、<code>夂</code>是三根、<code>正</code>是末根。</li><li><code>籍</code> 可以拆爲<code>𥫗丰八龷日</code>五個字根。我們只關注「首二三末」這四個字根，故而<code>𥫗</code>是首根、<code>丰</code>是次根、<code>八</code>是三根、<code>日</code>是末根。<code>龷</code>這個根我們不管它。</li></ul><h2 id="編碼規則" tabindex="-1">編碼規則 <a class="header-anchor" href="#編碼規則" aria-label="Permalink to &quot;編碼規則&quot;">​</a></h2><p>接下來我們學習單字的編碼規則，也就是如何把字根的編碼轉變爲單字編碼。</p><p>如果一個字本身就是字根，那麽它的單字編碼就是字根編碼，不言而喻。</p><div class="tip custom-block"><p class="custom-block-title">例</p><ul><li><code>弋</code> 的編碼就是對應的字根編碼：<code>Ki</code>，其中<code>K</code>是大碼、<code>i</code>是韻碼。它是零聲母，故而没有聲碼。</li><li><code>木</code> 的編碼就是對應的字根編碼：<code>Sme</code>，其中<code>S</code>是大碼、<code>m</code>是聲碼、<code>e</code>是韻碼。</li><li><code>骨</code> 的編碼就是對應的字根編碼：<code>Jgu</code>，其中<code>J</code>是大碼、<code>g</code>是聲碼、<code>u</code>是韻碼。</li></ul></div><p>如果一個字是由多個字根組成的，即<strong>多根字</strong>，它的編碼規則爲：</p><ol><li>取首根大碼和聲碼。</li><li>取二、三字根的大碼。</li><li>取末根的所有碼。</li><li>最多取五碼。</li></ol>',13)),t("div",s,[o[0]||(o[0]=e('<p class="custom-block-title">例</p><p><code>认</code>字拆成<code>讠人</code>，只有兩根，所以我們取全部根：首根<code>讠</code>、末根<code>人</code>。根據規則，我們取首根的大碼 <code>V</code> 和聲碼（空），然後取末根的所有碼 <code>Wo</code>，得到編碼<code>VWo</code>。因此，<code>认</code>字的編碼是<code>VWo</code>。</p>',2)),c(d,{char:"认",parts:[2,2]}),o[1]||(o[1]=e("<p><code>好</code>字拆成<code>女子</code>，只有兩根，所以我們取全部根：首根<code>女</code>、末根<code>子</code>。根據規則，我們取首根的大碼 <code>C</code> 和聲碼 <code>n</code>，然後取末根的所有碼 <code>Lzi</code>，得到編碼<code>CnLzi</code>。因此，<code>好</code>字的編碼是<code>CnLzi</code>。</p>",1)),c(d,{char:"好",parts:[3,3]}),o[2]||(o[2]=e("<p><code>但</code>字拆成<code>亻日一</code>，只有三根，所以我們取全部根：首根<code>亻</code>、二根<code>日</code>、末根<code>一</code>。根據規則，我們取首根的大碼 <code>W</code> 和聲碼（空），然後取二根的大碼 <code>J</code>，最後取末根的所有碼 <code>Fi</code>，得到編碼<code>WJFi</code>。因此，<code>但</code>字的編碼是<code>WJFi</code>。</p>",1)),c(d,{char:"但",parts:[2,4,1]}),o[3]||(o[3]=e("<p><code>算</code>字拆成<code>竹目卄</code>，只有三根，所以我們取全部根：首根<code>竹</code>、二根<code>目</code>、末根<code>廾</code>。根據規則，我們取首根的大碼 <code>Y</code> 和聲碼 <code>s</code>，然後取二根的大碼 <code>G</code>，最後取末根的所有碼 <code>Mci</code>，得到編碼<code>YsGMci</code>。注意到，這超過了五碼，而我們只取前五碼<code>YsGMc</code>。因此，<code>算</code>字的編碼是<code>YsGMc</code>。</p>",1)),c(d,{char:"算",parts:[6,5,3]}),o[4]||(o[4]=e("<p><code>织</code>字拆成<code>纟口八</code>，只有三根，所以我們取全部根: 首根<code>纟</code>、二根<code>口</code>、末根<code>八</code>。根據規則，我們取首根的大碼 <code>K</code> 和聲碼 <code>s</code>，然後取二根的大碼 <code>D</code>，最後取末根的所有碼 <code>Kba</code>，得到編碼<code>KsDKba</code>。注意到，這超過了五碼， 而我們只取前五碼<code>KsDKb</code>。因此，<code>织</code>字的編碼是<code>KsDKb</code>。</p>",1)),c(d,{char:"织",parts:[3,3,2]}),o[5]||(o[5]=e("<p><code>嫩</code>字拆成<code>女木口夂</code>，分別對應了首根<code>女</code>、二根<code>木</code>、三根<code>口</code>、末根<code>夂</code>。根據規則，我們取首根的大碼 <code>C</code> 和聲碼 <code>n</code>，然後取二根的大碼 <code>S</code>，接着取三根的大碼 <code>D</code>，最後取末根的所有碼 <code>Tpe</code>，得到編碼<code>CnSDTpe</code>。注意到，這超過了五碼，而我們只取前五碼<code>CnSDT</code>。因此，<code>嫩</code>字的編碼是<code>CnSDT</code>。</p>",1)),c(d,{char:"嫩",parts:[3,1,3,3,4],colors:[1,2,3,2,4]}),o[6]||(o[6]=e("<p><code>籍</code>字拆成<code>𥫗丰八龷日</code>，超過了四根，我們只取四根：首根<code>𥫗</code>、二根<code>丰</code>、三根<code>八</code>、末根<code>日</code>。根據規則，我們取首根的大碼 <code>Y</code> 和聲碼 <code>s</code>，然後取二根的大碼 <code>J</code>，接着取三根的大碼 <code>K</code>，最後取末根的所有碼 <code>Ji</code>，得到編碼<code>YsJKJi</code>。注意到，這超過了五碼，而我們只取前五碼<code>YsJKJ</code>。因此，<code>籍</code>字的編碼是<code>YsJKJ</code>。</p>",1)),c(d,{char:"籍",parts:[6,4,2,4,4],colors:[1,2,3,4,5]})]),o[8]||(o[8]=e('<p>你可能注意到了，在日月輸入法中，每個漢字的編碼不超過<strong>5個字母</strong>。更具體地，一個字可以是2碼、3碼、4碼、或5碼。</p><h2 id="空格鍵的使用" tabindex="-1">空格鍵的使用 <a class="header-anchor" href="#空格鍵的使用" aria-label="Permalink to &quot;空格鍵的使用&quot;">​</a></h2><p>在很多輸入法軟件中，空格鍵（以下用<code>_</code>表示）用來上屏没有達到最大長度的候選字。而在日月輸入法中，空格鍵基本是不需要使用的。這歸功於日月輸入法的<strong>无空格輸入</strong>設計。具體地説：</p><ol><li>一個字的編碼等於 5 時，已經是最大長度，無需按空格鍵上屏。只要繼續輸入下一個字的首碼，這個字就會自動上屏。我們稱之爲<strong>六碼頂屏</strong>（請參閲<a href="./../docs/concepts.html">瓊林擷英</a>瞭解相關概念）。例如：我們打「整理」二字，「整」字的編碼是<code>SmDTL</code>。輸入<code>SmDTL</code>後，我們直接輸入「理」字的首碼<code>P</code>，則「整」字會自動上屏。</li><li>一個字的編碼低於 5 時，它一定是以 <code>aoeiu</code> 五個字母結尾的。因此上，只要輸入法軟件見到這五個字母，就知道一個字已經輸完，將它上屏。比如「认」字，編碼是<code>VWo</code>，輸入<code>o</code>的瞬間，「认」字就會自動上屏。</li></ol><p>空格鍵只需在以下情況使用：</p><ol><li>一個字雖然已經輸完，但由於有其它候選，不能自動上屏，且後續沒有其他字或標點需要輸入，這時候需要按空格鍵（或數字1）上屏首選。</li><li>爲輸入效率考量，日月輸入法設置了一些特殊<strong>簡碼</strong>，它们的編碼不以<code>aoeiu</code>結尾，這時候需要按空格鍵（或數字1）上屏首選。當然，這些簡碼字的使用是可選的，也可以將它們屏蔽。</li></ol>',6))]))}});export{g as __pageData,h as default};
