import{_ as o}from"./chunks/Chaifen.vue_vue_type_script_setup_true_lang.DgF6BSeS.js";import{c as t,m as e,J as c,a4 as a,a as l,o as d}from"./chunks/framework.vM2YJXtg.js";const s=a("",10),i={class:"tip custom-block"},p=a("",2),_=e("p",null,[e("code",null,"整"),l("字拆成"),e("code",null,"木口夂正"),l("，我们只取首根、二根、三根、末根，也就是〔"),e("code",null,"木"),l(" Am "),e("code",null,"口"),l(" Lv "),e("code",null,"攵"),l(" Tu "),e("code",null,"正"),l(" Lz〕的大码，输入 ALTP 即可出字。")],-1),n=e("p",null,[e("code",null,"算"),l("字拆成"),e("code",null,"竹目卄"),l("，只有三根，所以我们取全部根，也就是〔"),e("code",null,"𥫗"),l(" Gz "),e("code",null,"目"),l(" Jm "),e("code",null,"廾"),l(" So〕的大码，即 GJS。此时，注意到不足四码，故而补上最末根的小码 o。输入 GJso 即可出字。")],-1),r=e("p",null,[e("code",null,"织"),l("字拆成"),e("code",null,"纟口八"),l("，只有三根，所以我们取全部根大码，也就是 KLK。此时，注意到不足四码，故而补上最末根的小码 a。输入 KLKa 即可出字。")],-1),u=e("p",null,[e("code",null,"认"),l("字拆成"),e("code",null,"讠人"),l("，只有两根，所以我们取全部根，也就是〔"),e("code",null,"讠"),l(" Dy "),e("code",null,"人"),l(" Re〕的大码，即 DR 。此时，注意到不足四码，故而补上最末根的小码 e。注意到仍然不足四码，于是再添上首根的小码 y。输入 DRey 即可出字。")],-1),h=e("p",null,[e("code",null,"好"),l("字拆成"),e("code",null,"女子"),l("，只有两根，所以我们取全部根，也就是〔"),e("code",null,"女"),l(" Cn "),e("code",null,"子"),l(" Kz〕的大码，即 CK。此时，注意到不足四码，故而补上最末根的小码 z。注意到仍然不足四码，于是再添上首根的小码 n。输入 CKzn 即可出字。")],-1),m=a("",15),T={class:"flex justify-left flex-wrap"},k=JSON.parse('{"title":"单字编码","description":"","frontmatter":{},"headers":[],"relativePath":"learn/chars.md","filePath":"learn/chars.md"}'),A={name:"learn/chars.md"},v=Object.assign(A,{setup(f){return(b,C)=>(d(),t("div",null,[s,e("div",i,[p,c(o,{char:"嫩",parts:[3,1,3,3,4],colors:[1,2,3,2,4]}),_,c(o,{char:"整",parts:[1,3,3,4,5],colors:[1,2,1,3,4]}),n,c(o,{char:"算",parts:[6,5,3]}),r,c(o,{char:"织",parts:[3,3,2]}),u,c(o,{char:"认",parts:[2,2]}),h,c(o,{char:"好",parts:[3,3]})]),m,e("div",T,[c(o,{char:"霁",parts:[8,4,2]}),c(o,{char:"雨",parts:[8]})])]))}});export{k as __pageData,v as default};
