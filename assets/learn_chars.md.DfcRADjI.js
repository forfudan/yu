import{_ as o}from"./chunks/Chaifen.vue_vue_type_script_setup_true_lang.z09GklCb.js";import{c as t,m as e,J as c,a4 as a,a as l,o as d}from"./chunks/framework.DTi27XpN.js";const s=a('<h1 id="单字编码" tabindex="-1">单字编码 <a class="header-anchor" href="#单字编码" aria-label="Permalink to &quot;单字编码&quot;">​</a></h1><h2 id="编码规则" tabindex="-1">编码规则 <a class="header-anchor" href="#编码规则" aria-label="Permalink to &quot;编码规则&quot;">​</a></h2><p>学习了「宇浩」的拆字规则后，我们可以将任何一个汉字拆成唯一的字根组合。最后一步，便是把字根转为「宇浩」编码。</p><p>宇浩的单字编码一般是由<strong>4 个字母</strong>构成。部分字根字为 3 个字母。</p><p>在「宇浩」中，无论一个字能拆成几个字根，我们只关心其中的四个根，分别是：</p><ul><li>第一根：首根</li><li>第二根：二根</li><li>第三根：三根</li><li>倒数第一根：末根</li></ul><p>这同五笔字型相同，和郑码、徐码不同。</p><p>单字编码规则如下：</p><ol><li>依次取一、二、三、末根大码。</li><li>不足四码时，补上末根小码。</li><li>仍然不足四码时，补上首根小码。</li></ol><p>最后一条，只有双根字中会出现。第二条，只有三根字中会出现。</p>',10),i={class:"tip custom-block"},p=a('<p class="custom-block-title">例</p><p><code>嫩</code>字拆成<code>女木口夂</code>，分别对应了首根、二根、三根、末根，我们直接取〔<code>女</code> Cn <code>木</code> Am <code>口</code> Lv <code>夂</code> Tu〕四个字根的大码 CALT 即可出字。</p>',2),_=e("p",null,[e("code",null,"整"),l("字拆成"),e("code",null,"木口夂正"),l("，我们只取首根、二根、三根、末根，也就是〔"),e("code",null,"木"),l(" Am "),e("code",null,"口"),l(" Lv "),e("code",null,"攵"),l(" Tu "),e("code",null,"正"),l(" Lz〕的大码，输入 ALTP 即可出字。")],-1),n=e("p",null,[e("code",null,"算"),l("字拆成"),e("code",null,"竹目卄"),l("，只有三根，所以我们取全部根，也就是〔"),e("code",null,"𥫗"),l(" Gz "),e("code",null,"目"),l(" Jm "),e("code",null,"廾"),l(" So〕的大码，即 GJS。此时，注意到不足四码，故而补上最末根的小码 o。输入 GJso 即可出字。")],-1),r=e("p",null,[e("code",null,"织"),l("字拆成"),e("code",null,"纟口八"),l("，只有三根，所以我们取全部根大码，也就是 KLK。此时，注意到不足四码，故而补上最末根的小码 a。输入 KLKa 即可出字。")],-1),u=e("p",null,[e("code",null,"认"),l("字拆成"),e("code",null,"讠人"),l("，只有两根，所以我们取全部根，也就是〔"),e("code",null,"讠"),l(" Dy "),e("code",null,"人"),l(" Re〕的大码，即 DR 。此时，注意到不足四码，故而补上最末根的小码 e。注意到仍然不足四码，于是再添上首根的小码 y。输入 DRey 即可出字。")],-1),h=e("p",null,[e("code",null,"好"),l("字拆成"),e("code",null,"女子"),l("，只有两根，所以我们取全部根，也就是〔"),e("code",null,"女"),l(" Cn "),e("code",null,"子"),l(" Kz〕的大码，即 CK。此时，注意到不足四码，故而补上最末根的小码 z。注意到仍然不足四码，于是再添上首根的小码 n。输入 CKzn 即可出字。")],-1),m=a('<p>末尾添加首根的小码，只是为了补齐四码的作用，只有在双根字中才会出现。</p><h2 id="成字字根" tabindex="-1">成字字根 <a class="header-anchor" href="#成字字根" aria-label="Permalink to &quot;成字字根&quot;">​</a></h2><p>有些字根本身就是常用字，称为「成字字根」，又称为「单根字」。</p><p>单根字的全码为三码：大码+小码+小码</p><div class="tip custom-block"><p class="custom-block-title">例</p><p><code>木</code>作为单字时，编码为 <code>Amm</code>。</p><p><code>骨</code>作为单字时，编码为 <code>Rgg</code>。</p></div><p>注意到，字根字编码规则同单字编码规则是一致的。</p><ul><li>假设字根大码为 A，小码为 a。</li><li>首先，依次取一、二、三、末根大码，故取 A。</li><li>接着，不足四码，故补上末根小码，故取 a。</li><li>最后，仍然不足四码，故补上首根小码 a。最终编码为 Aaa。</li></ul><div class="info custom-block"><p class="custom-block-title">常见问题</p><p>Q：字根字重复小码的原因是什么？</p><p>A：首先是为了让字根编码规则和单字编码规则一致。其次，如果字根字是两码，但字根本身比较罕用，那么会浪费一个宝贵的二级简码码位。</p><p>很多输入法会将另一个常用字设置成二简，而让字根字选重，或者通过其他方式为字根字增加一码。这个方式实际上却在事实上形成了新的重码。宇浩输入法直接在根源上解决了这个问题。</p></div><h2 id="空格键的使用" tabindex="-1">空格键的使用 <a class="header-anchor" href="#空格键的使用" aria-label="Permalink to &quot;空格键的使用&quot;">​</a></h2><p>在很多输入法软件中，空格键（以下用<code>_</code>表示）用来上屏首选字。</p><p>根据以上的学习内容，我们发现：「宇浩」的编码最长不超过 4 个字母。由于这个特性，我们在输入完编码后，不一定需要按空格键将字打上屏幕。</p><p>空格键只在以下情况需要使用：</p><ol><li>一个字的编码低于 4 位，需要按空格键上屏首选。比如「人」字，需要按<code>Re_</code>上屏。</li><li>一个字的编码等于 4 位，且后面没有其他的字需要输入，则需要按空格键上屏首选。</li></ol><p>以下情况，不需要使用空格键：</p><p>一个字的编码等于 4 位，且有后续字符等待输入。我们不需要按空格键。只要直接输入下一个字的首码，这个字就会自动上屏。我们称之为「五码顶屏」。例如：我们打「霁雨」二字，「霁」字的编码是<code>〔雨文{介下}・ CTKa〕</code>。输入<code>a</code>后，我们直接输入「雨」字的编码<code>〔雨・ Cvv〕</code>，则「霁」字会自动上屏。</p>',15),T={class:"flex justify-left flex-wrap"},k=JSON.parse('{"title":"单字编码","description":"","frontmatter":{},"headers":[],"relativePath":"learn/chars.md","filePath":"learn/chars.md"}'),A={name:"learn/chars.md"},v=Object.assign(A,{setup(f){return(b,C)=>(d(),t("div",null,[s,e("div",i,[p,c(o,{char:"嫩",parts:[3,1,3,3,4],colors:[1,2,3,2,4]}),_,c(o,{char:"整",parts:[1,3,3,4,5],colors:[1,2,1,3,4]}),n,c(o,{char:"算",parts:[6,5,3]}),r,c(o,{char:"织",parts:[3,3,2]}),u,c(o,{char:"认",parts:[2,2]}),h,c(o,{char:"好",parts:[3,3]})]),m,e("div",T,[c(o,{char:"霁",parts:[8,4,2]}),c(o,{char:"雨",parts:[8]})])]))}});export{k as __pageData,v as default};
